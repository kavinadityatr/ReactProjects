{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  breakLength: 5,\n  sessionLength: 25,\n  sec: 1500,\n  breakMode: false,\n  tick: false\n};\nexport const timerSlice = createSlice({\n  name: 'timer',\n  initialState,\n  reducers: {\n    incBreak: state => {\n      if (state.breakLength < 60) {\n        state.breakLength++;\n        if (state.breakMode) {\n          state.sec = state.breakLength * 60;\n        }\n      }\n    },\n    decBreak: state => {\n      if (state.breakLength > 1) {\n        state.breakLength--;\n        if (state.breakMode) {\n          state.sec = state.breakLength * 60;\n        }\n      }\n    },\n    incSession: state => {\n      if (state.sessionLength < 60) {\n        state.sessionLength++;\n        if (!state.breakMode) {\n          state.sec = state.sessionLength * 60;\n        }\n      }\n    },\n    decSession: state => {\n      if (state.sessionLength > 1) {\n        state.sessionLength--;\n        if (!state.breakMode) {\n          state.sec = state.sessionLength * 60;\n        }\n      }\n    },\n    resetConfig: state => {\n      return initialState;\n    },\n    setTIme: (state, actions) => {\n      state.sec = actions.payload;\n    },\n    toggleTick: state => {\n      state.tick = !state.tick;\n    },\n    tickDown: state => {\n      if (state.sec > 0) {\n        state.sec -= 1;\n      }\n    },\n    resetTimer: state => {\n      return initialState;\n    },\n    chgMode: state => {\n      state.breakMode = !state.breakMode;\n      if (state.breakMode) {\n        state.sec = state.breakLength * 60;\n      } else {\n        state.sec = state.sessionLength * 60;\n      }\n    }\n  }\n});\nexport const {\n  incBreak,\n  decBreak,\n  incSession,\n  decSession,\n  resetConfig,\n  setTIme,\n  toggleTick,\n  tickDown,\n  resetTimer,\n  chgMode\n} = timerSlice.actions;\nexport default timerSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","breakLength","sessionLength","sec","breakMode","tick","timerSlice","name","reducers","incBreak","state","decBreak","incSession","decSession","resetConfig","setTIme","actions","payload","toggleTick","tickDown","resetTimer","chgMode","reducer"],"sources":["/Users/dharani/Documents/reactProject/clock/src/features/timerSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    breakLength: 5,\n    sessionLength: 25,\n    sec: 1500,\n    breakMode: false,\n    tick: false,\n}\n\nexport const timerSlice = createSlice({\n    name: 'timer',\n    initialState,\n    reducers: {\n        incBreak: (state) => { \n            if (state.breakLength < 60) {\n                state.breakLength++\n                if (state.breakMode) {\n                    state.sec = state.breakLength*60\n                }\n            }\n        },\n        decBreak: (state) => {\n            if (state.breakLength > 1) {\n                state.breakLength-- \n                if (state.breakMode) {\n                    state.sec = state.breakLength*60\n                }\n            } \n        },\n        incSession: (state) => {\n            if (state.sessionLength < 60) {\n                state.sessionLength++ \n                if (!state.breakMode) {\n                    state.sec = state.sessionLength*60\n                }\n            }\n        },\n        decSession: (state) => {\n            if (state.sessionLength > 1) {\n                state.sessionLength-- \n                if (!state.breakMode) {\n                    state.sec = state.sessionLength*60       \n                }\n            }\n        },\n        resetConfig: (state) => {\n            return initialState\n        },\n\n        setTIme: (state, actions) => {\n            state.sec = actions.payload\n        },\n        toggleTick: (state) => {\n            state.tick = !state.tick\n        },\n        tickDown: (state) => {\n            if (state.sec > 0) {\n                state.sec -= 1\n            }\n        },\n        resetTimer: (state) => {\n            return initialState\n        },\n        chgMode: (state) => {\n            state.breakMode = !state.breakMode\n            if (state.breakMode) {\n                state.sec = state.breakLength*60\n            } else {\n                state.sec = state.sessionLength*60\n            }\n        },\n    },\n})\n\nexport const { incBreak, decBreak, incSession, decSession,\n    resetConfig, setTIme, toggleTick, tickDown, resetTimer,\n    chgMode,\n} = timerSlice.actions\n\nexport default timerSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE,EAAE;EACjBC,GAAG,EAAE,IAAI;EACTC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAClCQ,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE;IACNC,QAAQ,EAAGC,KAAK,IAAK;MACjB,IAAIA,KAAK,CAACT,WAAW,GAAG,EAAE,EAAE;QACxBS,KAAK,CAACT,WAAW,EAAE;QACnB,IAAIS,KAAK,CAACN,SAAS,EAAE;UACjBM,KAAK,CAACP,GAAG,GAAGO,KAAK,CAACT,WAAW,GAAC,EAAE;QACpC;MACJ;IACJ,CAAC;IACDU,QAAQ,EAAGD,KAAK,IAAK;MACjB,IAAIA,KAAK,CAACT,WAAW,GAAG,CAAC,EAAE;QACvBS,KAAK,CAACT,WAAW,EAAE;QACnB,IAAIS,KAAK,CAACN,SAAS,EAAE;UACjBM,KAAK,CAACP,GAAG,GAAGO,KAAK,CAACT,WAAW,GAAC,EAAE;QACpC;MACJ;IACJ,CAAC;IACDW,UAAU,EAAGF,KAAK,IAAK;MACnB,IAAIA,KAAK,CAACR,aAAa,GAAG,EAAE,EAAE;QAC1BQ,KAAK,CAACR,aAAa,EAAE;QACrB,IAAI,CAACQ,KAAK,CAACN,SAAS,EAAE;UAClBM,KAAK,CAACP,GAAG,GAAGO,KAAK,CAACR,aAAa,GAAC,EAAE;QACtC;MACJ;IACJ,CAAC;IACDW,UAAU,EAAGH,KAAK,IAAK;MACnB,IAAIA,KAAK,CAACR,aAAa,GAAG,CAAC,EAAE;QACzBQ,KAAK,CAACR,aAAa,EAAE;QACrB,IAAI,CAACQ,KAAK,CAACN,SAAS,EAAE;UAClBM,KAAK,CAACP,GAAG,GAAGO,KAAK,CAACR,aAAa,GAAC,EAAE;QACtC;MACJ;IACJ,CAAC;IACDY,WAAW,EAAGJ,KAAK,IAAK;MACpB,OAAOV,YAAY;IACvB,CAAC;IAEDe,OAAO,EAAEA,CAACL,KAAK,EAAEM,OAAO,KAAK;MACzBN,KAAK,CAACP,GAAG,GAAGa,OAAO,CAACC,OAAO;IAC/B,CAAC;IACDC,UAAU,EAAGR,KAAK,IAAK;MACnBA,KAAK,CAACL,IAAI,GAAG,CAACK,KAAK,CAACL,IAAI;IAC5B,CAAC;IACDc,QAAQ,EAAGT,KAAK,IAAK;MACjB,IAAIA,KAAK,CAACP,GAAG,GAAG,CAAC,EAAE;QACfO,KAAK,CAACP,GAAG,IAAI,CAAC;MAClB;IACJ,CAAC;IACDiB,UAAU,EAAGV,KAAK,IAAK;MACnB,OAAOV,YAAY;IACvB,CAAC;IACDqB,OAAO,EAAGX,KAAK,IAAK;MAChBA,KAAK,CAACN,SAAS,GAAG,CAACM,KAAK,CAACN,SAAS;MAClC,IAAIM,KAAK,CAACN,SAAS,EAAE;QACjBM,KAAK,CAACP,GAAG,GAAGO,KAAK,CAACT,WAAW,GAAC,EAAE;MACpC,CAAC,MAAM;QACHS,KAAK,CAACP,GAAG,GAAGO,KAAK,CAACR,aAAa,GAAC,EAAE;MACtC;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO,QAAQ;EAAEE,QAAQ;EAAEC,UAAU;EAAEC,UAAU;EACrDC,WAAW;EAAEC,OAAO;EAAEG,UAAU;EAAEC,QAAQ;EAAEC,UAAU;EACtDC;AACJ,CAAC,GAAGf,UAAU,CAACU,OAAO;AAEtB,eAAeV,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}