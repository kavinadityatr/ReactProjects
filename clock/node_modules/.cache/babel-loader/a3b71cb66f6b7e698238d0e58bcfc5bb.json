{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  breakLength: 5,\n  sessionLength: 25,\n  sec: 1500,\n  breakMode: false,\n  tick: false\n};\nexport const timerSlice = createSlice({\n  name: 'timer',\n  initialState,\n  reducers: {\n    incBreak: state => {\n      if (state.breakLength < 60) {\n        state.breakLength++;\n\n        if (state.breakMode) {\n          state.sec = state.breakLength * 60;\n        }\n      }\n    },\n    decBreak: state => {\n      if (state.breakLength > 1) {\n        state.breakLength--;\n\n        if (state.breakMode) {\n          state.sec = state.breakLength * 60;\n        }\n      }\n    },\n    incSession: state => {\n      if (state.sessionLength < 60) {\n        state.sessionLength++;\n\n        if (!state.breakMode) {\n          state.sec = state.sessionLength * 60;\n        }\n      }\n    },\n    decSession: state => {\n      if (state.sessionLength > 1) {\n        state.sessionLength--;\n\n        if (!state.breakMode) {\n          state.sec = state.sessionLength * 60;\n        }\n      }\n    },\n    resetConfig: state => {\n      return initialState;\n    },\n    setTIme: (state, actions) => {\n      state.sec = actions.payload;\n    },\n    toggleTick: state => {\n      state.tick = !state.tick;\n    },\n    tickDown: state => {\n      if (state.sec > 0) {\n        state.sec -= 1;\n      }\n    },\n    resetTimer: state => {\n      return initialState;\n    },\n    chgMode: state => {\n      state.breakMode = !state.breakMode;\n\n      if (state.breakMode) {\n        state.sec = state.breakLength * 60;\n      } else {\n        state.sec = state.sessionLength * 60;\n      }\n    }\n  }\n});\nexport const {\n  incBreak,\n  decBreak,\n  incSession,\n  decSession,\n  resetConfig,\n  setTIme,\n  toggleTick,\n  tickDown,\n  resetTimer,\n  chgMode\n} = timerSlice.actions;\nexport default timerSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","breakLength","sessionLength","sec","breakMode","tick","timerSlice","name","reducers","incBreak","state","decBreak","incSession","decSession","resetConfig","setTIme","actions","payload","toggleTick","tickDown","resetTimer","chgMode","reducer"],"sources":["/Users/dharani/Documents/reactProject/clock/src/features/timerSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    breakLength: 5,\n    sessionLength: 25,\n    sec: 1500,\n    breakMode: false,\n    tick: false,\n}\n\nexport const timerSlice = createSlice({\n    name: 'timer',\n    initialState,\n    reducers: {\n        incBreak: (state) => { \n            if (state.breakLength < 60) {\n                state.breakLength++\n                if (state.breakMode) {\n                    state.sec = state.breakLength*60\n                }\n            }\n        },\n        decBreak: (state) => {\n            if (state.breakLength > 1) {\n                state.breakLength-- \n                if (state.breakMode) {\n                    state.sec = state.breakLength*60\n                }\n            } \n        },\n        incSession: (state) => {\n            if (state.sessionLength < 60) {\n                state.sessionLength++ \n                if (!state.breakMode) {\n                    state.sec = state.sessionLength*60\n                }\n            }\n        },\n        decSession: (state) => {\n            if (state.sessionLength > 1) {\n                state.sessionLength-- \n                if (!state.breakMode) {\n                    state.sec = state.sessionLength*60       \n                }\n            }\n        },\n        resetConfig: (state) => {\n            return initialState\n        },\n\n        setTIme: (state, actions) => {\n            state.sec = actions.payload\n        },\n        toggleTick: (state) => {\n            state.tick = !state.tick\n        },\n        tickDown: (state) => {\n            if (state.sec > 0) {\n                state.sec -= 1\n            }\n        },\n        resetTimer: (state) => {\n            return initialState\n        },\n        chgMode: (state) => {\n            state.breakMode = !state.breakMode\n            if (state.breakMode) {\n                state.sec = state.breakLength*60\n            } else {\n                state.sec = state.sessionLength*60\n            }\n        },\n    },\n})\n\nexport const { incBreak, decBreak, incSession, decSession,\n    resetConfig, setTIme, toggleTick, tickDown, resetTimer,\n    chgMode,\n} = timerSlice.actions\n\nexport default timerSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,CADI;EAEjBC,aAAa,EAAE,EAFE;EAGjBC,GAAG,EAAE,IAHY;EAIjBC,SAAS,EAAE,KAJM;EAKjBC,IAAI,EAAE;AALW,CAArB;AAQA,OAAO,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAClCQ,IAAI,EAAE,OAD4B;EAElCP,YAFkC;EAGlCQ,QAAQ,EAAE;IACNC,QAAQ,EAAGC,KAAD,IAAW;MACjB,IAAIA,KAAK,CAACT,WAAN,GAAoB,EAAxB,EAA4B;QACxBS,KAAK,CAACT,WAAN;;QACA,IAAIS,KAAK,CAACN,SAAV,EAAqB;UACjBM,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACT,WAAN,GAAkB,EAA9B;QACH;MACJ;IACJ,CARK;IASNU,QAAQ,EAAGD,KAAD,IAAW;MACjB,IAAIA,KAAK,CAACT,WAAN,GAAoB,CAAxB,EAA2B;QACvBS,KAAK,CAACT,WAAN;;QACA,IAAIS,KAAK,CAACN,SAAV,EAAqB;UACjBM,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACT,WAAN,GAAkB,EAA9B;QACH;MACJ;IACJ,CAhBK;IAiBNW,UAAU,EAAGF,KAAD,IAAW;MACnB,IAAIA,KAAK,CAACR,aAAN,GAAsB,EAA1B,EAA8B;QAC1BQ,KAAK,CAACR,aAAN;;QACA,IAAI,CAACQ,KAAK,CAACN,SAAX,EAAsB;UAClBM,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACR,aAAN,GAAoB,EAAhC;QACH;MACJ;IACJ,CAxBK;IAyBNW,UAAU,EAAGH,KAAD,IAAW;MACnB,IAAIA,KAAK,CAACR,aAAN,GAAsB,CAA1B,EAA6B;QACzBQ,KAAK,CAACR,aAAN;;QACA,IAAI,CAACQ,KAAK,CAACN,SAAX,EAAsB;UAClBM,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACR,aAAN,GAAoB,EAAhC;QACH;MACJ;IACJ,CAhCK;IAiCNY,WAAW,EAAGJ,KAAD,IAAW;MACpB,OAAOV,YAAP;IACH,CAnCK;IAqCNe,OAAO,EAAE,CAACL,KAAD,EAAQM,OAAR,KAAoB;MACzBN,KAAK,CAACP,GAAN,GAAYa,OAAO,CAACC,OAApB;IACH,CAvCK;IAwCNC,UAAU,EAAGR,KAAD,IAAW;MACnBA,KAAK,CAACL,IAAN,GAAa,CAACK,KAAK,CAACL,IAApB;IACH,CA1CK;IA2CNc,QAAQ,EAAGT,KAAD,IAAW;MACjB,IAAIA,KAAK,CAACP,GAAN,GAAY,CAAhB,EAAmB;QACfO,KAAK,CAACP,GAAN,IAAa,CAAb;MACH;IACJ,CA/CK;IAgDNiB,UAAU,EAAGV,KAAD,IAAW;MACnB,OAAOV,YAAP;IACH,CAlDK;IAmDNqB,OAAO,EAAGX,KAAD,IAAW;MAChBA,KAAK,CAACN,SAAN,GAAkB,CAACM,KAAK,CAACN,SAAzB;;MACA,IAAIM,KAAK,CAACN,SAAV,EAAqB;QACjBM,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACT,WAAN,GAAkB,EAA9B;MACH,CAFD,MAEO;QACHS,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACR,aAAN,GAAoB,EAAhC;MACH;IACJ;EA1DK;AAHwB,CAAD,CAA9B;AAiEP,OAAO,MAAM;EAAEO,QAAF;EAAYE,QAAZ;EAAsBC,UAAtB;EAAkCC,UAAlC;EACTC,WADS;EACIC,OADJ;EACaG,UADb;EACyBC,QADzB;EACmCC,UADnC;EAETC;AAFS,IAGTf,UAAU,CAACU,OAHR;AAKP,eAAeV,UAAU,CAACgB,OAA1B"},"metadata":{},"sourceType":"module"}